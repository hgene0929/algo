'''
[만들 수 없는 금액]
- 구해야하는 것: 주어진 N개의 동전을 조합해서 처음으로 나온 만들 수 없는 금액.
- 아이디어:
    - 주어진 동전으로 순열을 구한 다음 나열해서 가장 첫번째로 나오는 없는 수?
    - 이거 시간복잡도 고려해볼 필요 있음: nP1 + nP2 + ... + nPn-1 + nPn -> 최악의 경우? 1000P1 + 1000P2 + ... + 1000P999 + 1000P1000? -> 택도 없을듯..
- 실패 후 재시도:
    - 여기서 키 포인트는 살펴볼 target(금액) 과 주어진 금액 을 매번 비교하는 것이다.
    - Ex. target = 1,2,3,4,5,6,7,8,9,...이고, coins = [1,1,2,3,9] 인 상황에서
          처음으로 target=1을 만들 수 있는 지 살펴보기 위해 주어진 금액을 보면 1(target보다 작거나 같다) => OK! => target += 주어진 금액
          두번째로 target=2를 만들 수 있는 지 살펴보기 위해 주어진 금액을 보면 1(target보다 작거나 같다) => OK! => target += 주어진 금액
          세번째로 target=3을 만들 수 있는 지 살펴보기 위해 주어진 금액을 보면 2(target보다 작거나 같다) => OK! => target += 주어진 금액
          네번째로 target=5를 만들 수 있는 지 살펴보기 위해 주어진 금액을 보면 3(target보다 작거나 같다) => OK! => target += 주어진 금액
          다섯째로 target=8을 만들 수 있는 지 살펴보기 위해 주어진 금액을 보면 9(target보다 크다) => 8을 만들어야 하는 데, 9? => 만들 수 없다.

    => 주어진 금액을 오름차순으로 정렬해서 1 부터 누적합을 한 target의 값과 주어진 금액을 비교했을 때 target을 만들기 위해서는 주어진 금액이 target보다 항상 작거나 같아야 한다!!
'''
#입력
n = int(input())
coins = list(map(int, input().split()))

#풀이
coins.sort()
target = 1 #양의 정수의 시작

for coin in coins: #주어진 금액 살펴보며
    if coin > target: #주어진 금액이 만들어야 하는 금액보다 크면 -> 만들 수 없는 금액
        break
    target += coin #현재 코인으로 만들 수 있는 최대 금액으로 target 갱신

#출력
print(target)