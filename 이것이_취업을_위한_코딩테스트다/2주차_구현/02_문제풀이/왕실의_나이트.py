'''
[왕실의 나이트]
- 8*8 (1~8 | a~h) 체스판 위에서 나이트는 L자로만 이동할 수 있다.
- 구해야하는 것 : 현재 나이트가 위치한 곳의 좌표에서 나이트가 이동가능한 경우의 수.
- 아이디어 :
    - 이건 나이트 최대 이동횟수 8이므로 최악의 경우, 64 탐색 => 그냥 구현해봐도 무방함.
    - 직접 주어진 위치에서 나이트 이동시켜보면서 가능하면 카운트 횟수 +1 증가 => 최종적으로 누적된 카운트 값 출력.
'''
#입력
ky,kx = map(str, input()) #첫번째문자는 열, 두번째문자는 행

ky = ord(ky) - ord('a') + 1 #문자를 숫자로 변환하여, a의 아스키코드값을 빼준 값 + 1은 해당 좌표값
kx = int(kx)

#풀이
#나이트 이동동선 = (R,R,U),(R,R,D),(L,L,U),(L,L,D),(U,U,R),(U,U,L),(D,D,R),(D,D,L)
#R(y+1) L(y-1) U(x-1) D(x+1)
moves = [(-1,2),(1,2),(-1,-2),(1,-2),(-2,1),(-2,-1),(2,1),(2,-1)]
cnt = 0

for move in moves:
    if 0 < kx + move[0] <= 8 and 0 < ky + move[1] <= 8:
        cnt += 1

#출력
print(cnt)